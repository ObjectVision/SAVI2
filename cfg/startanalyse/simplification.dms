container simplification {

	container z_7 := Templates/SimplifyAndExportGeometry(100000[units/mm], 500[units/m]) {
		container export {
			unit<uint32> z_7 := simplification/z_7/simplify/SimplifiedPolygons/Results
			, StorageName = "%LocalDataProjDir%/simplified/z_7.shp"
			, StorageType = "gdalwrite.vect"
			, StorageReadOnly = "False"
			{
			    attribute<geography/wm_m> geometry(poly) := convert(simplification/z_7/simplify/SimplifiedPolygons/Results/geometry, geography/wm_m);
				attribute<string> BU_CODE := SourceData/buurt2020/BU_CODE;
			}
		}

		container read {
			unit<uint32> z_7 
			: StorageName = "%LocalDataProjDir%/simplified/z_7.shp"
			, StorageType = "gdal.vect"
			, StorageReadOnly = "True"
			, SyncMode = "alltables"
			{
			   attribute<geography/wm_m> geometry(poly);
			}
		}
	}

	container z_8 := Templates/SimplifyAndExportGeometry(100000[units/mm], 500[units/m]) {
		container export {
			unit<uint32> z_8 := simplification/z_8/simplify/SimplifiedPolygons/Results
			, StorageName = "%LocalDataProjDir%/simplified/z_8.shp"
			, StorageType = "gdalwrite.vect"
			, StorageReadOnly = "False"
			{
			    attribute<geography/wm_m> geometry(poly) := convert(simplification/z_8/simplify/SimplifiedPolygons/Results/geometry, geography/wm_m);
				attribute<string> BU_CODE := SourceData/buurt2020/BU_CODE;
			}
		}

		container read {
			unit<uint32> z_8 
			: StorageName = "%LocalDataProjDir%/simplified/z_8.shp"
			, StorageType = "gdal.vect"
			, StorageReadOnly = "True"
			, SyncMode = "alltables"
			{
			   attribute<geography/wm_m> geometry(poly);
			}
		}
	}

	container z_9 := Templates/SimplifyAndExportGeometry(100000[units/mm], 500[units/m]) {
		container export {
			unit<uint32> z_9 := simplification/z_9/simplify/SimplifiedPolygons/Results
			, StorageName = "%LocalDataProjDir%/simplified/z_9.shp"
			, StorageType = "gdalwrite.vect"
			, StorageReadOnly = "False"
			{
			    attribute<geography/wm_m> geometry(poly) := convert(simplification/z_9/simplify/SimplifiedPolygons/Results/geometry, geography/wm_m);
				attribute<string> BU_CODE := SourceData/buurt2020/BU_CODE;
			}
		}

		container read {
			unit<uint32> z_9 
			: StorageName = "%LocalDataProjDir%/simplified/z_9.shp"
			, StorageType = "gdal.vect"
			, StorageReadOnly = "True"
			, SyncMode = "alltables"
			{
			   attribute<geography/wm_m> geometry(poly);
			}
		}
	}
	
	container z_10 := Templates/SimplifyAndExportGeometry(100000[units/mm], 400[units/m]) {
		container export {
			unit<uint32> z_10 := simplification/z_10/simplify/SimplifiedPolygons/Results
			, StorageName = "%LocalDataProjDir%/simplified/z_10.shp"
			, StorageType = "gdalwrite.vect"
			, StorageReadOnly = "False"
			{
			   attribute<geography/wm_m> geometry(poly) := convert(simplification/z_10/simplify/SimplifiedPolygons/Results/geometry, geography/wm_m);
			   attribute<string> BU_CODE := SourceData/buurt2020/BU_CODE;
			}
		}

		container read {
			unit<uint32> z_10 
			: StorageName = "%LocalDataProjDir%/simplified/z_10.shp"
			, StorageType = "gdal.vect"
			, StorageReadOnly = "True"
			, SyncMode = "alltables"
			{
			   attribute<geography/wm_m> geometry(poly);
			}
		}
	}
	
	container z_11 := Templates/SimplifyAndExportGeometry(10000[units/mm], 250[units/m]) {
		container export {
			unit<uint32> z_11 := simplification/z_11/simplify/SimplifiedPolygons/Results
			, StorageName = "%LocalDataProjDir%/simplified/z_11.shp"
			, StorageType = "gdalwrite.vect"
			, StorageReadOnly = "False"
			{
			    attribute<geography/wm_m> geometry(poly) := convert(simplification/z_11/simplify/SimplifiedPolygons/Results/geometry, geography/wm_m);
			    attribute<string> BU_CODE := SourceData/buurt2020/BU_CODE;
			}
		}

		container read {
			unit<uint32> z_11 
			: StorageName = "%LocalDataProjDir%/simplified/z_11.shp"
			, StorageType = "gdal.vect"
			, StorageReadOnly = "True"
			, SyncMode = "alltables"
			{
			   attribute<geography/wm_m> geometry(poly);
			}
		}
	}
	
	container z_12 := Templates/SimplifyAndExportGeometry(10000[units/mm], 150[units/m]) {
		container export {
			unit<uint32> z_12 := simplification/z_12/simplify/SimplifiedPolygons/Results
			, StorageName = "%LocalDataProjDir%/simplified/z_12.shp"
			, StorageType = "gdalwrite.vect"
			, StorageReadOnly = "False"
			{
			   attribute<geography/wm_m> geometry(poly) := convert(simplification/z_12/simplify/SimplifiedPolygons/Results/geometry, geography/wm_m);
				attribute<string> BU_CODE := SourceData/buurt2020/BU_CODE;
			}
		}

	container read {
			unit<uint32> z_12 
			: StorageName = "%LocalDataProjDir%/simplified/z_12.shp"
			, StorageType = "gdal.vect"
			, StorageReadOnly = "True"
			, SyncMode = "alltables"
			{
			   attribute<geography/wm_m> geometry(poly);
			}
		}
	}
	
	container z_13 := Templates/SimplifyAndExportGeometry(10000[units/mm], 100[units/m]) {
		container export {
			unit<uint32> z_13 := simplification/z_13/simplify/SimplifiedPolygons/Results
			, StorageName = "%LocalDataProjDir%/simplified/z_13.shp"
			, StorageType = "gdalwrite.vect"
			, StorageReadOnly = "False"
			{
			   attribute<geography/wm_m> geometry(poly) := convert(SourceData/buurt2020/geometry_rdc_m_ipoint, geography/wm_m);
			   attribute<string> BU_CODE := SourceData/buurt2020/BU_CODE;
			}
		}

		container read {
			unit<uint32> z_13 
			: StorageName = "%LocalDataProjDir%/simplified/z_13.shp"
			, StorageType = "gdal.vect"
			, StorageReadOnly = "True"
			, SyncMode = "alltables"
			{
			   attribute<geography/wm_m> geometry(poly);
			}
		}
	}
	
	parameter<string> export_all := "True", ExplicitSuppliers="z_7/export;z_8/export;z_9/export;z_10/export;z_11/export;z_12/export;z_13/export";
}